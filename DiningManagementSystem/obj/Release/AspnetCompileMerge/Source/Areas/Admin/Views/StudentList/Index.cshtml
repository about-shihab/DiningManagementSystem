@model IEnumerable<BOL.Student>

@{
    ViewBag.Title = "StudentList";
}

<br />
<br />
<br/>
<h5>List Of Registered Student</h5>
<br/>
<script>
    function ConfirmApprove(parameters) {
        return confirm('Are you sure want Approve?');
    }
    function ConfirmReject(parameters) {
        return confirm('Are you sure want Reject?');
    }
</script>
@if (TempData["Msg"] != null)
{
    <div class="alert alert-dismissible alert-success">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <strong>@TempData["Msg"]</strong>
    </div>
}
<table class="table table-striped table-bordered table-hover">
    <tr class="table-bordered">
        <h4>
            @if (ViewBag.Status == "P")
            {
                <b>@Html.ActionLink("Pending Student", "Index", new { Status = "P" })</b>
            }
            else
            {
                @Html.ActionLink("Pending Student", "Index", new { Status = "P" })
            }
            |
            @if (ViewBag.Status == "A")
            {
                <b>@Html.ActionLink("Approved Student", "Index", new { Status = "A" })</b>
            }
            else
            {
                @Html.ActionLink("Approved Student", "Index", new { Status = "A" })
            }
            |
            @if (ViewBag.Status == "R")
            {
                <b>@Html.ActionLink("Rejected Student", "Index", new { Status = "R" })</b>
            }
            else
            {
                @Html.ActionLink("Rejected Student", "Index", new { Status = "R" })
            }
        </h4>
    </tr>
</table>
<table class="table table-striped table-bordered table-hover">
    <tr >
        <th>Approve/Reject</th>
        <th>
            @Html.ActionLink("Name", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), SortBy = "Name", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Status = ViewBag.Status })

        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        
        <th>
            <b>Meal Id</b>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RoomNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MobileNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Department.Name)
        </th>
        
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink("Approve", "Approve", new { id = item.StudentId }, new { onclick = "return ConfirmApprove();" }) |
                @Html.ActionLink("Reject", "Reject", new { id = item.StudentId }, new { onclick = "return ConfirmReject();" })

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StudentId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RoomNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MobileNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department.Name)
            </td>
        </tr>
    }


</table>





@{
    double totalPages = ViewBag.TotalPages;
}
<ul class="pagination">
    @for (int i = 1; i <= totalPages; i++)
    {
        if (i == ViewBag.Page)
        {
            <li class="active">@Html.ActionLink(i.ToString() + " ", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder), SortBy = (ViewBag.SortBy == null ? "Title" : ViewBag.SortBy), Page = i, Status = ViewBag.Status })</li>
        }
        else
        {
            <li>@Html.ActionLink(i.ToString() + " ", "Index", new { SortOrder = (ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder), SortBy = (ViewBag.SortBy == null ? "Title" : ViewBag.SortBy), Page = i, Status = ViewBag.Status })</li>
        }
    }
</ul>
    <script src="~/Scripts/jquery-2.2.1.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
